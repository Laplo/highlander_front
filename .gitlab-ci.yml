image: docker:19.03.1

services:
  - docker:19.03.1-dind

variables:
  # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"

stages:
  - build
  - test
  - dockerbuild
  - sonardev
  - sonarfix
  - sonar
  - deploy
  - end2end

cache:
  paths:
    - node_modules/
    - coverage/
    - build/

build:
  stage: build
  image: node:12.14.1-alpine3.11
  script: yarn install && yarn run build
  only:
    - develop

test:
  stage: test
  image: node:12.14.1-alpine3.11
  script: CI=true yarn test

dockerbuild:
  stage: dockerbuild
  script:
    - docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
    - /master/
    - /develop/
    - /^release-.*/

sonar-dev:
  stage: sonardev
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_TOKEN: $SONAR_TOKEN
    SONAR_HOST_URL: $SONAR_HOST_URL
    GIT_DEPTH: 0
  script:
    - cd ./coverage
    - ls -la
    - sed -i 's/1.0/1/' ./clover.xml
    - cd ..
    - sonar-scanner -Dsonar.projectKey=$SONAR_PROJECT -Dsonar.branch.name=dev -Dsonar.organization=$SONAR_ORGANIZATION -Dsonar.login=$SONAR_LOGIN

sonar:
  stage: sonar
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_TOKEN: $SONAR_TOKEN
    SONAR_HOST_URL: $SONAR_HOST_URL
    GIT_DEPTH: 0
  script:
    - sonar-scanner -Dsonar.projectKey=$SONAR_PROJECT -Dsonar.organization=$SONAR_ORGANIZATION -Dsonar.login=$SONAR_LOGIN
  only:
    - /master/

deploy:
  stage: deploy
  image: hublo/kubectl:latest
  script:
    - echo -n $KUBE_CONFIG | base64 -d > ./config
    - kubectl set image deployment/highlanderfront $CONTAINER_NAME=$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --kubeconfig ./config --namespace msprci-develop
  only:
    - develop

end-2-end:
  stage: end2end
  image: node:12.14.1-alpine3.11
  script: yarn run test:cypress
  only:
    - /^release-.*/
