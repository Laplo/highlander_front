image: docker:19.03.1

services:
  - docker:19.03.1-dind

variables:
  # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"

stages:
  - build
  - test
  - dockerbuild
  - sonardev
  - sonarfix
  - sonar
  - deploy
  - end2end

cache:
  paths:
    - node_modules/

build:
  stage: build
  image: node:12.14.1-alpine3.11
  script: yarn install && yarn run build
  only :
    - develop

test:
  stage: test
  image: node:12.14.1-alpine3.11
  script: yarn run test
  only:
    - develop

dockerbuild:
  stage: dockerbuild
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
    - /master/
    - /develop/
    - /^release-.*/

sonar-dev:
  stage: sonardev
  image: node:12.14.1-alpine3.11
  script:
    - apk --no-cache add curl
    - export SONAR_SCANNER_VERSION=4.0.0.1744
    - export SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux
    - rm -rf $SONAR_SCANNER_HOME
    - mkdir -p $SONAR_SCANNER_HOME
    - curl -sSLo $HOME/.sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux.zip
    - unzip $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
    - rm $HOME/.sonar/sonar-scanner.zip
    - export PATH=$SONAR_SCANNER_HOME/bin:$PATH
    - export SONAR_SCANNER_OPTS="-server"
    - sonar-scanner -Dsonar.projectKey=$SONAR_PROJECT -Dsonar.branch.name=dev -Dsonar.organization=$SONAR_ORGANIZATION -Dsonar.sources=. -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_LOGIN -Dsonar.javascript.file.suffixes=.js,.jsx
  only:
    - /develop/

sonarfix:
  stage: sonarfix
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_TOKEN: "4fafac9638980d590c747df9aa2db05a9af7d385"
    SONAR_HOST_URL: "https://sonarcloud.io"
    GIT_DEPTH: 0
  script:
    - sonar-scanner -Dsonar.projectKey=$SONAR_PROJECT -Dsonar.branch.name=dev -Dsonar.organization=$SONAR_ORGANIZATION -Dsonar.sources=. -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_LOGIN -Dsonar.javascript.file.suffixes=.js,.jsx

sonar:
  stage: sonar
  image: node:12.14.1-alpine3.11
  script:
    - apk --no-cache add curl
    - export SONAR_SCANNER_VERSION=4.0.0.1744
    - export SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux
    - rm -rf $SONAR_SCANNER_HOME
    - mkdir -p $SONAR_SCANNER_HOME
    - curl -sSLo $HOME/.sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux.zip
    - unzip $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
    - rm $HOME/.sonar/sonar-scanner.zip
    - export PATH=$SONAR_SCANNER_HOME/bin:$PATH
    - export SONAR_SCANNER_OPTS="-server"
    - sonar-scanner -Dsonar.projectKey=$SONAR_PROJECT -Dsonar.organization=$SONAR_ORGANIZATION -Dsonar.sources=. -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_LOGIN -Dsonar.javascript.file.suffixes=.js,.jsx
  only:
    - /master/

deploy:
  stage: deploy
  image: hublo/kubectl:latest
  script:
    - echo -n $KUBE_CONFIG | base64 -d > ./config
    - kubectl set image deployment/highlanderfront $CONTAINER_NAME=$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --kubeconfig ./config --namespace msprci-develop
  only:
    - develop

end-2-end:
  stage: end2end
  image: node:12.14.1-alpine3.11
  script: yarn run test:cypress
  only:
    - /^release-.*/
